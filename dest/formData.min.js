/**
 * formData - Form validation based on data attributes
 * @date - Thu Jul 30 2015 14:48:55 GMT+0200 (Central Europe Daylight Time)
 * @version - 1.0.1
 */
!function(t,i,e){"use strict";function s(i,e){this.$form=t(i),this.options=t.extend(!0,{},r,e),this.$fields=this.$form.find("[data-"+this.options.validDataAttr+"], [required]"),this.isFormValid=!1,this.formLog={},this.version=l,this.getFieldsRules(),this.addFormEvents(),this.addFieldEvents()}var r,o,a,l,n;n={},a="FormData",l="1.0.1",o={validFormClass:"formdata"},r={keyup:!1,blur:!0,validDataAttr:"valid",classSuccess:"success",classError:"error",tpl:{error:'<span class="form-error">{message}</span>'},preventSubmit:!1,onError:null,onSuccess:null},s.prototype.getFieldsRules=function(){var i,e,s,r,o,a=null;i=this,this.fieldsRules=[],e=0,this.$fields.each(function(){s=t(this),r=s.data(i.options.validDataAttr)||null,s.data("field-id",e),s.attr("aria-invalid","false"),/\|/.test(r)?(r=r.split("|"),o=r[0],a=r[1],/\-/.test(a)&&(a=a.split("-"))):o=r,i.fieldsRules.push({name:o,opt:a}),e++})},s.prototype.addFieldEvents=function(){var t=this;this.$fields.on({keyup:function(i){9!==i.keyCode&&t.options.keyup&&t.validateField(this)},blur:function(){return t.options.blur?t.validateField(this):!1}})},s.prototype.addFormEvents=function(){var t=this;this.$form.on("submit",function(i){t.submitForm(),t.isFormValid?"function"==typeof t.options.onSuccess&&(i.preventDefault(),t.options.onSuccess(t.$form)):(i.preventDefault(),"function"==typeof t.options.onError&&t.options.onError(t.formLog))})},s.prototype.submitForm=function(){var t=this;this.$fields.each(function(){t.validateField(this)}),this.isFormValid=!this.parseFormLog()},s.prototype.parseFormLog=function(){var t,i;i=0;for(t in this.formLog)this.formLog[t]&&(i+=1);return i},s.prototype.validateField=function(i){this.$field=t(i),this.fieldId=this.$field.data("field-id"),this.fieldName=this.$field.attr("name"),this.value=t.trim(this.$field.val()),this.opt=this.fieldsRules[this.fieldId].opt,this.fieldRuleName=this.fieldsRules[this.fieldId].name?this.fieldsRules[this.fieldId].name:"required",this.validationRule=s.getRule(this.fieldRuleName),this.isFieldValid(this.validationRule.fn.call(this))},s.prototype.isFieldValid=function(t){return t?this.hideFieldError():this.showFieldError()},s.prototype.showFieldError=function(){this.formLog[this.fieldName]||this.$field.prop("disabled")||(this.$field.removeClass(this.options.classSuccess),this.$field.addClass(this.options.classError),this.$field.attr("aria-invalid","true"),this.showFieldErrorMessage(this.$field.data("message")?this.$field.data("message"):this.validationRule.message))},s.prototype.hideFieldError=function(){this.$field.removeClass(this.options.classError),this.$field.addClass(this.options.classSuccess),this.$field.attr("aria-invalid","false"),this.hideFieldErrorMessage()},s.prototype.showFieldErrorMessage=function(t){var i,e,s;if("string"==typeof this.opt&&(t=t.replace(/{\w+}/i,this.opt)),this.opt&&"object"==typeof this.opt)for(e=0,s=this.opt.length,e;s>e;e++)t=t.replace(/{\w+}/i,this.opt[e]);return this.formLog[this.fieldName]=t,i=this.options.tpl.error.replace(/{message}/i,t),this.$field.after(i)},s.prototype.hideFieldErrorMessage=function(){return this.formLog[this.fieldName]=null,this.$field.next().remove()},s.prototype.parseErrors=function(t){return"string"==typeof t?JSON.parse(t):t},s.prototype.setErrors=function(t){var i,e;e=this.parseErrors(t);for(i in e)e.hasOwnProperty(i)&&(this.$field=this.$fields.filter("[name="+i+"]"),this.showFieldErrorMessage(e[i]))},s.setup=function(i){r=t.extend(!0,{},r,i)},s.addRule=function(t,i,e){if(n[t])throw new Error("Validation rule:"+t+" already added.");if("function"!=typeof i)throw new Error("Rule function not defined.");n[t]={fn:i,message:e||"Error"}},s.getRule=function(t){if(!n[t])throw new Error("Validation rule:"+t+" doesn't exist.");return n[t]},window.FormData=s,t.fn[a]=function(i){return this.each(function(){var e,r;e=t(this),r=e.data(a),r||e.data(a,new s(this,i))})},t(function(){t("."+o.validFormClass).FormData()})}(jQuery,window,document),function(t){FormData.addRule("required",function(){return this.value.length},"This field is required."),FormData.addRule("email",function(){var t=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return t.test(this.value)},"Please enter a valid email address. For example user@site.com"),FormData.addRule("number",function(){var t=/^\d+$/;return t.test(this.value)},"Please enter numbers only."),FormData.addRule("float",function(){var t=/^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/;return t.test(this.value)},"Please enter numbers with float point."),FormData.addRule("min",function(){return this.value.length>=Math.floor(this.opt)},"You should fill minimum {min} characters."),FormData.addRule("max",function(){return this.value.length<=Math.floor(this.opt)&&this.value.length},"You should fill maximum {max} characters"),FormData.addRule("range",function(){return this.value.length>=Math.floor(this.opt[0])&&this.value.length<=Math.floor(this.opt[1])},"You should fill from {min} to {max} characters.")}(jQuery);